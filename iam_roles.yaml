AWSTemplateFormatVersion: '2010-09-09'
Description: IAM Roles for DevSecOps Pipeline. (YAML Syntax Corrected - Attempt 2)

Resources:
  # IAM Role for AWS CodePipeline
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DevSecOpsCodePipelineServiceRole # Or TransactionSimulatorCodePipelineRole, if you prefer
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSSystemsManagerReadOnlyAccess # To read SSM parameters for CodeBuild
      Policies:
        - PolicyName: CodePipelineServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action: "codestar-connections:UseConnection"
                Resource: "arn:aws:codeconnections:us-east-1:864981715490:connection/743c9fe4-1a25-46e1-b068-daf51b807075"
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StopBuild"
                  - "codebuild:ListBuildsForProject"
                Resource: "*"
              - Effect: "Allow"
                Action: "sns:Publish"
                Resource: !GetAtt ManualApprovalSNSTopic.Arn
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucketVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:ListBucket"
                  - "s3:PutObjectAcl"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::transaction-simulator-pipeline-artifacts-${AWS::Region}-${AWS::AccountId}"
                  - !Sub "arn:${AWS::Partition}:s3:::transaction-simulator-pipeline-artifacts-${AWS::Region}-${AWS::AccountId}/*"
              - Effect: "Allow"
                Action: "iam:PassRole"
                Resource: !GetAtt CodeDeployServiceRole.Arn
      Path: "/"

  # IAM Role for AWS CodeBuild
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TransactionSimulatorCodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: # Corrected: Removed array brackets, using standard YAML list syntax
          - Effect: "Allow" # Corrected from = to :
            Principal: # Corrected from = to :
              Service: "codebuild.amazonaws.com" # Corrected from = to :
            Action: "sts:AssumeRole" # Corrected from = to :
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess # Broad access for demo
        - arn:aws:iam::aws:policy/AmazonS3FullAccess # For CodeBuild artifacts
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess # For CodeBuild logs
        - arn:aws:iam::aws:policy/AWSSystemsManagerReadOnlyAccess # To access SSM parameters
      Policies:
        - PolicyName: CodeBuildTerraformPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement: # Corrected: Removed array brackets, using standard YAML list syntax
              - Effect: "Allow"
                Action:
                  - "s3:ListBucket"
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:DeleteObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::transaction-simulator-pipeline-artifacts-${AWS::Region}-${AWS::AccountId}"
                  - !Sub "arn:${AWS::Partition}:s3:::transaction-simulator-pipeline-artifacts-${AWS::Region}-${AWS::AccountId}/*"
                  - "arn:aws:s3:::transaction-simulator-terraform-tfstate" # Terraform state bucket
                  - "arn:aws:s3:::transaction-simulator-terraform-tfstate/*" # Terraform state bucket objects
                  - "arn:aws:s3:::transaction-simulator-frontend-*"
                  - "arn:aws:s3:::transaction-simulator-frontend-*/*"
              - Effect: "Allow"
                Action:
                  - "dynamodb:CreateTable"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:DescribeTable"
                Resource: "arn:aws:dynamodb:us-east-1:864981715490:table/terraform-state-lock-table"
              - Effect: "Allow"
                Action:
                  - "lambda:*"
                  - "apigateway:*"
                  - "iam:*"
                  - "cloudwatch:PutMetricData"
                  - "logs:CreateLogGroup"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogStream"
                Resource: "*"
      Path: "/"

  # IAM Role for CodeDeploy Lambda Deployment
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TransactionSimulatorCodeDeployLambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: # Corrected: Removed array brackets, using standard YAML list syntax
          - Effect: "Allow"
            Principal:
              Service: "codedeploy.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForLambda
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      Policies:
        - PolicyName: CodeDeployLambdaInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement: # Corrected: Removed array brackets, using standard YAML list syntax
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                  - "lambda:GetFunction"
                  - "lambda:GetFunctionConfiguration"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:ListVersionsByFunction"
                  - "lambda:GetAlias"
                  - "lambda:UpdateAlias"
                  - "lambda:CreateAlias"
                Resource:
                  - "arn:aws:lambda:us-east-1:864981715490:function:TransactionSimulatorAPI"
                  - "arn:aws:lambda:us-east-1:864981715490:function:TransactionSimulatorAPI:*"
                  - "arn:aws:lambda:us-east-1:864981715490:function:TransactionSimulatorAPI:LIVE"
                  - "arn:aws:lambda:us-east-1:864981715490:function:TransactionSimulatorAPI:BETA"
      Path: "/"

  # SNS Topic for Manual Approval notifications
  ManualApprovalSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: TransactionSimulatorApprovalNotification
      DisplayName: Transaction Simulator Approval Notifications

Outputs:
  CodePipelineServiceRoleArn:
    Description: ARN of the CodePipeline Service Role
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: DevSecOpsCodePipelineServiceRoleArn

  CodeBuildServiceRoleArn:
    Description: ARN of the CodeBuild Service Role
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: TransactionSimulatorCodeBuildRoleArn

  CodeDeployServiceRoleArn:
    Description: ARN of the CodeDeploy Service Role
    Value: !GetAtt CodeDeployServiceRole.Arn
    Export:
      Name: TransactionSimulatorCodeDeployLambdaRoleArn

  DevSecOpsApprovalNotificationTopicArn:
    Description: ARN of the SNS Topic for approval notifications
    Value: !GetAtt ManualApprovalSNSTopic.Arn
    Export:
      Name: TransactionSimulatorApprovalNotificationTopicArn